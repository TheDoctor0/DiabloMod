/* Plugin generated by AMXX-Studio */

#include <amxmodx>
#include <amxmisc>
#include <fun>
#include <engine>
#include <fakemeta>

#include <diablo_nowe.inc>

#define PLUGIN "Zabojca"
#define VERSION "1.0"
#define AUTHOR "O'Zone"

#define ZABOJCA_VIEW "models/diablomod/v_zabojca.mdl"

#define TASK_SLAP 5493

native diablo_get_user_render_rope(id);
native diablo_get_user_render_armor(id);
native diablo_get_user_render_coat(id);

new bool:bKlasa[33], bool:iJump[ 33 ], iJumps[ 33 ]

new iWpn = CSW_GLOCK18 | CSW_USP | CSW_P228 | CSW_DEAGLE | CSW_ELITE | CSW_FIVESEVEN;

public plugin_init() {
	register_plugin(PLUGIN, VERSION, AUTHOR)
	
	diablo_register_class("Zabojca",100,"<br>Na startcie posiada: 100HP.<br>Nie slychac jego krokow i ma podwojny skok.<br>Gdy postrzeli wroga ma 1/4 szansy, ze przeciwnik zostanie wyrzucony w powietrze.<br>Umiejetnosc ladowana na nozu: Tymczasowa niewidzialnosc - dziala do czasu zmiany broni.<br><br>");
	
	register_forward(FM_CmdStart, "CmdStart");
}

public plugin_precache()
	precache_model(ZABOJCA_VIEW);

public diablo_weapon_deploy(id,wpnID,weaponEnt)
{
	if(bKlasa[id])
	{
		if(wpnID == CSW_KNIFE)
			entity_set_string(id, EV_SZ_viewmodel, ZABOJCA_VIEW) 
		else
		{
			new szItem[32];
			diablo_get_item_name(diablo_get_user_item(id), szItem, charsmax(szItem));
			if(equal(szItem, "Pierscien Przesladowcy")) 
				diablo_set_user_render(id, .render = kRenderTransAlpha, .amount = 5)
			else if(equal(szItem, "Naszyjnik Niewidzialnosci"))
				diablo_set_user_render(id, .render = kRenderTransAlpha, .amount = diablo_get_user_render_rope(id))
			else if(equal(szItem, "Zbroja Niewidzialnosci"))
				diablo_set_user_render(id, .render = kRenderTransAlpha, .amount = diablo_get_user_render_armor(id))
			else if(equal(szItem, "Plaszcz Niewidzialnosci"))
				diablo_set_user_render(id, .render = kRenderTransAlpha, .amount = diablo_get_user_render_coat(id))
			else
				diablo_render_cancel(id);
			
			if(equal(szItem , "Sygnet Lowcy"))
				diablo_give_user_bow(id, true);
		}
	}
}

public diablo_class_enabled(id){
	set_user_footsteps(id,1);
	bKlasa[id]		=	true;
	iJump[ id ] = true;
}

public diablo_class_disabled(id){
	if(is_user_connected(id))
		set_user_footsteps(id,0);
	bKlasa[id]		=	false;
	iJump[ id ] = false;
}

public diablo_set_data(id){
	set_user_footsteps(id,1);
	iJump[ id ] = true;
}

public diablo_clean_data(id){
	if(is_user_connected(id))
		set_user_footsteps(id,0);
	iJump[ id ] = false;
}

public diablo_player_spawned(id){
	if(!bKlasa[id] || !is_user_alive(id))
		return PLUGIN_CONTINUE
		
	set_user_footsteps(id,1);
	
	diablo_add_speed(id,10.0);
	
	diablo_set_knife(id , 5);
	return PLUGIN_CONTINUE
}

public diablo_damage_taken_post(iKiller,iVictim,iDamage){
	if(!is_user_connected(iVictim) || !bKlasa[iKiller] || iVictim == iKiller || !(get_user_weapon(iKiller) & iWpn))
		return PLUGIN_CONTINUE;
		
	if(random_num(1, 4) == 1)
	{	
		remove_task(iVictim+TASK_SLAP);
		new data[2];
		data[0] = iKiller;
		data[1] = iVictim;
		set_task(0.2, "slapUser", TASK_SLAP+iVictim, data, 2);
	}
	return PLUGIN_CONTINUE;
}

public slapUser(id){
	id -= TASK_SLAP;
	if(is_user_alive(id)){
		user_slap(id, 0, 1); 
	}
}

public Float:diablo_cast_time(id,Float:standardTime){
	return standardTime * 1.6;
}

public diablo_call_cast(id){
	set_hudmessage(60, 200, 25, -1.0, 0.25, 0, 1.0, 2.0, 0.1, 0.2, 2)
	show_hudmessage(id, "Jestes tymczasowo niewidzialny") 
	
	diablo_set_user_render(id,.render = kRenderTransAlpha,.amount = 10);
	new szItem[ 64 ];
	diablo_get_item_name( diablo_get_user_item( id ) , szItem , charsmax( szItem ) ) ;
	if( equal( szItem , "Sygnet Lowcy" ) )
		diablo_give_user_bow(id, false);
}

public CmdStart(id, uc_handle)
{
	if(!is_user_connected(id) || !iJump[id])
		return FMRES_IGNORED;
	
	new button = get_uc(uc_handle, UC_Buttons);
	new oldbutton = pev(id, pev_oldbuttons);
	new flags = pev(id, pev_flags);
	if((button & IN_JUMP) && !(flags & FL_ONGROUND) && !(oldbutton & IN_JUMP) && iJumps[id])
	{
		iJumps[id] = 0;
		new Float:velocity[3];
		pev(id, pev_velocity, velocity);
		velocity[2] = random_float(265.0,285.0);
		set_pev(id, pev_velocity, velocity);
	}
	else if(flags & FL_ONGROUND)	
		iJumps[id] = 1;
		
	return FMRES_IGNORED;
}