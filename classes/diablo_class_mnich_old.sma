/* Plugin generated by AMXX-Studio */

#include <amxmodx>
#include <amxmisc>
#include <fun>
#include <engine>
#include <fakemeta>
#include <hamsandwich>
#include <diablo_nowe.inc>

#define PLUGIN "Mnich"
#define VERSION "1.0"
#define AUTHOR "O'Zone"

#define MNICH_VIEW "models/diablomod/v_mnich.mdl"

new bool:bKlasa[33], num_shield[33];

new Float:gfBlockSizeMin1[3]= {-32.0,-4.0,-32.0};
new Float:gfBlockSizeMax1[3]= { 32.0, 4.0, 32.0};
new Float:vAngles1[3] = {90.0,90.0,0.0}

new Float:gfBlockSizeMin2[3]= {-4.0,-32.0,-32.0}
new Float:gfBlockSizeMax2[3]= { 4.0, 32.0, 32.0}
new Float:vAngles2[3] = {90.0,0.0,0.0}

public plugin_init() {
	register_plugin(PLUGIN, VERSION, AUTHOR)
	
	diablo_register_class("Mnich",140,"<br>Ma 140HP na start.<br>Zdobywa 2x szybciej doswiadczenie i szybciej biega.<br>Na nozu laduje stawianie barier ochronnych w miejscu, gdzie celuje.<br><br>");
	
	register_event("HLTV", "RemoveShield", "a", "1=0", "2=0");
	
	RegisterHam(Ham_TraceAttack, "info_target", "TraceAttack")
}

public plugin_precache(){
	precache_model(MNICH_VIEW);
	precache_model("models/diablomod/bm_block_platform.mdl");
}

public client_disconnect(id)
{
	if(bKlasa[id]){
		new entShield = find_ent_by_class(-1, "dbmod_shield");
		while(entShield > 0)
		{
			if(entity_get_edict(entShield, EV_ENT_owner) == id)
				remove_entity(entShield);
			entShield = find_ent_by_class(entShield, "dbmod_shield");
		}
	}
}

public RemoveShield()
{
	new entShield = find_ent_by_class(-1, "dbmod_shield");
	while(entShield > 0)
	{
		remove_entity(entShield);
		entShield = find_ent_by_class(entShield, "dbmod_shield");
	}
}

public diablo_set_data(id){
	num_shield[id]=2+floatround(diablo_get_user_int(id)/25.0,floatround_floor)
}

public diablo_clean_data(id){
	num_shield[id]=2+floatround(diablo_get_user_int(id)/25.0,floatround_floor)
}

public diablo_class_spawned(id){	
	if(bKlasa[id])
		diablo_add_speed(id,25.0);
}

public diablo_class_enabled(id){
	bKlasa[id]	=	true;
}

public diablo_class_disabled(id){
	bKlasa[id]	=	false;
}

public diablo_kill_xp(id,iIle){
	if(bKlasa[id])	return iIle * 2
	return 0;
}

public diablo_weapon_deploy(id,wpnID,weaponEnt){
	if(bKlasa[id] && wpnID == CSW_KNIFE){
		entity_set_string(id, EV_SZ_viewmodel, MNICH_VIEW) 
	}
}

public Float:diablo_cast_time(id,Float:standardTime){
	return standardTime;
}

public diablo_call_cast(id){
	set_hudmessage(60, 200, 25, -1.0, 0.25, 0, 1.0, 2.0, 0.1, 0.2, 2)
	if(num_shield[id])
	{
		show_hudmessage(id, "Wyczarowales magiczna sciane") 
		create_shield(id)
	}
	else show_hudmessage(id, "Nie mozesz wiecej wyczarowac") 
}

public create_shield(id)
{
	new Float:vOrigin[3];
	new Float:vAngles[3]
	entity_get_vector(id,EV_VEC_v_angle,vAngles)
	entity_get_vector(id,EV_VEC_origin,vOrigin)
	new Float:offset = distance_to_floor(vOrigin)
	vOrigin[2]+=17.0-offset
	
	if(vAngles[1]>45.0&&vAngles[1]<135.0)
	{
		vOrigin[0]+=0.0
		vOrigin[1]+=34.0
		if(chacke_pos(vOrigin,0)==0) return
		make_shield(id,vOrigin,vAngles1,gfBlockSizeMin1,gfBlockSizeMax1)
	}
	else if(vAngles[1]<-45.0&&vAngles[1]>-135.0)
	{
		vOrigin[0]+=0.0
		vOrigin[1]+=-34.0
		if(chacke_pos(vOrigin,0)==0) return
		make_shield(id,vOrigin,vAngles1,gfBlockSizeMin1,gfBlockSizeMax1)
	}
	else if(vAngles[1]>-45.0&&vAngles[1]<45.0)
	{
		vOrigin[0]+=34.0
		vOrigin[1]+=0.0
		if(chacke_pos(vOrigin,1)==0) return
		make_shield(id,vOrigin,vAngles2,gfBlockSizeMin2,gfBlockSizeMax2)
	}
	else
	{
		vOrigin[0]+=-34.0
		vOrigin[1]+=0.0
		if(chacke_pos(vOrigin,1)==0) return
		make_shield(id,vOrigin,vAngles2,gfBlockSizeMin2,gfBlockSizeMax2)
	}
}

public make_shield(id,Float:vOrigin[3],Float:vAngles[3],Float:gfBlockSizeMin[3],Float:gfBlockSizeMax[3])
{
	new ent = create_entity("info_target")
	
	if (is_valid_ent(ent))
	{
		entity_set_string(ent, EV_SZ_classname, "dbmod_shield")
		entity_set_int(ent, EV_INT_solid, SOLID_BBOX)
		entity_set_int(ent, EV_INT_movetype, MOVETYPE_NONE)
		entity_set_float(ent,EV_FL_health,250.0+float(diablo_get_user_int(id)*5))
		entity_set_float(ent,EV_FL_takedamage,1.0)
				
		entity_set_model(ent, "models/diablomod/bm_block_platform.mdl");
		entity_set_vector(ent, EV_VEC_angles, vAngles)
		entity_set_size(ent, gfBlockSizeMin, gfBlockSizeMax)
		
		entity_set_edict(ent,EV_ENT_euser1,id)
		
		entity_set_origin(ent, vOrigin)
		
		num_shield[id]--
		
		return 1
	}
	return 0
}

public chacke_pos(Float:vOrigin[3],axe)
{
	new test=0
	vOrigin[axe]-=15.0
	if(distance_to_floor(vOrigin)<31.0) test++
	vOrigin[axe]+=15.0
	if(distance_to_floor(vOrigin)<31.0) test++
	vOrigin[axe]+=15.0
	if(distance_to_floor(vOrigin)<31.0) test++
	if(test<2) return 0
	vOrigin[axe]-=15.0
	return 1
}

stock Float:distance_to_floor(Float:start[3], ignoremonsters = 1) {
    new Float:dest[3], Float:end[3];
    dest[0] = start[0];
    dest[1] = start[1];
    dest[2] = -8191.0;

    engfunc(EngFunc_TraceLine, start, dest, ignoremonsters, 0, 0);
    get_tr2(0, TR_vecEndPos, end);

    //pev(index, pev_absmin, start);
    new Float:ret = start[2] - end[2];

    return ret > 0 ? ret : 0.0;
}

public TraceAttack(victim, attacker, Float:damage, Float:direction[3], th, dt) {
	if (!is_valid_ent(victim))
		return HAM_IGNORED
		
	if(!(pev(attacker,pev_button) & IN_ATTACK))
		return HAM_SUPERCEDE
		
	new name[32]
	entity_get_string(victim, EV_SZ_classname, name, 31)
		
	if(equal(name,"dbmod_shield"))
	{
		new Float: health = entity_get_float(victim,EV_FL_health)
		if(health-damage <= 0.0){
			if(entity_get_edict(victim,EV_ENT_euser1) == attacker){
				num_shield[attacker]++
				set_hudmessage(60, 200, 25, -1.0, 0.25, 0, 1.0, 2.0, 0.1, 0.2, 2)
				show_hudmessage(attacker, "Zniszczyles wlasna magiczna sciane - mozesz postawic kolejna!") 
			}
			remove_entity(victim)
			return HAM_SUPERCEDE
		}
	}
	return HAM_IGNORED
}