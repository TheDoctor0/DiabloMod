/* Plugin generated by AMXX-Studio */

#include <amxmodx>
#include <amxmisc>
#include <engine>
#include <hamsandwich>
#include <fakemeta_util>
#include <fakemeta>
#include <csx>

#include <diablo_nowe.inc>

#define PLUGIN "Lowca"
#define VERSION "1.0"
#define AUTHOR "O'Zone"

#define LOWCA_VIEW "models/diablomod/v_lowca.mdl"

#define write_coord_f(%1) engfunc(EngFunc_WriteCoord,%1);

new bool:bKlasa[33],trace_bool[33],sprite_line;

new hunter_he[33]

public plugin_init() {
	register_plugin(PLUGIN, VERSION, AUTHOR)
	
	diablo_register_class("Lowca",120,"<br>Na starcie posiada: 120 HP.<br>Posiada Kusze (wybierz noz a potem wcisnij R, by wyjac). Jest nieco szybszy.<br>Moze zastawiac pulapki z granatow (zmiana trybow PPM).<br>Gdy postrzeli przeciwnika, zostawia on za soba slad.<br>Umiejetnosc ladowana na nozu: Granaty wybuchowe, ktore moze uzyc jako pulapki.<br><br>");
}

public plugin_precache()
{
	sprite_line		= 	precache_model("sprites/dot.spr")
	precache_model(LOWCA_VIEW);
}

public diablo_weapon_deploy(id,wpnID,weaponEnt)
{
	if(bKlasa[id] && wpnID == CSW_KNIFE)
		entity_set_string(id, EV_SZ_viewmodel, LOWCA_VIEW) 
}

public diablo_class_spawned(id)
{
	if(bKlasa[id])
	{
		diablo_give_user_trap(id);
		diablo_give_user_bow(id);
		diablo_add_speed(id, 20.0);
	}
}

public Float:diablo_cast_time(id,Float:standardTime)
{	
	return standardTime;
}

public diablo_call_cast(id)
{
	set_hudmessage(60, 200, 25, -1.0, 0.25, 0, 1.0, 2.0, 0.1, 0.2, 2)
	if(hunter_he[id]>3)
		show_hudmessage(id, "Nie mozesz wyczarowac wiecej granatow w tej rundzie")
	else
	{
		if(sprawdz_bronie(id, (1<<CSW_HEGRENADE)))
			show_hudmessage(id, "Masz juz granat wybuchowy")
		else 
		{
			show_hudmessage(id, "Dostales granat wybuchowy")
			fm_give_item(id, "weapon_hegrenade")
			hunter_he[id]++
		}
	}
}

public diablo_clean_data(id)
{
	trace_bool[id]		=	0;
	diablo_give_user_trap(id, false);
	diablo_give_user_bow(id, false);
	hunter_he[id]		=	0;
}

public diablo_set_data(id)
{
	trace_bool[id]		=	0;
	diablo_give_user_trap(id);
	diablo_give_user_bow(id);
	new szItem[32];
	diablo_get_item_name(diablo_get_user_item(id), szItem, charsmax(szItem));
	if(equal(szItem, "Amulet Ognia") || equal(szItem, "Ognisty Pas"))
		hunter_he[id]		=	2;
	else
		hunter_he[id]		=	0;
}

public diablo_class_disabled(id)
	bKlasa[id]	=	false;

public diablo_class_enabled(id)
	bKlasa[id]	=	true;

public diablo_damage_taken_post(iKiller,iVictim,iDamage)
{
	static iWpn = CSW_GLOCK18 | CSW_USP | CSW_P228 | CSW_DEAGLE | CSW_ELITE | CSW_FIVESEVEN;
	
	if(bKlasa[iKiller] && is_user_connected(iVictim) && iVictim != iKiller && get_user_weapon(iKiller) & iWpn)
	{
		new ori[3]
		trace_bool[iKiller] = iVictim
		get_user_origin(iVictim,ori)
		
		new parms[5];
		
		for(new i=0;i<3;i++)
			parms[i] = ori[i] 
		parms[3]= iKiller
		parms[4]= iVictim
		set_task(0.5,"charge_hunter",iKiller,parms,5)
	}
}

public hunter_Line(id,vid,end[3])
{
	if(is_user_alive(id) && is_user_alive(vid) && trace_bool[id])
	{
		new start[3]
		get_user_origin(vid,start)
		
		message_begin(MSG_ONE,SVC_TEMPENTITY,{0,0,0},id)
		write_byte(0)
		write_coord(start[0])	// starting pos
		write_coord(start[1])
		write_coord(start[2])
		write_coord(end[0])	// ending pos
		write_coord(end[1])
		write_coord(end[2])
		write_short(sprite_line)	// sprite index
		write_byte(1)		// starting frame
		write_byte(5)		// frame rate
		write_byte(100)		// life
		write_byte(1)		// line width
		write_byte(0)		// noise
		write_byte(200)	// RED
		write_byte(100)	// GREEN
		write_byte(100)	// BLUE					
		write_byte(75)		// brightness
		write_byte(5)		// scroll speed
		message_end()
		
		new parms[5];
		
		for(new i=0;i<3;i++)
			parms[i] = start[i] 
		parms[3]=id
		parms[4]=vid
		
		set_task(0.20,"charge_hunter",id+vid*100,parms,5)
	}
}

public charge_hunter(parms[])
{
	new stop[3];
	for(new i=0;i<3;i++)
		stop[i] = parms[i];
	hunter_Line(parms[3],parms[4],stop);
}

stock bool:sprawdz_bronie(id, disallowed) 
{
	new weapons[32], num;
	return bool:(get_user_weapons(id, weapons, num) & disallowed);
}